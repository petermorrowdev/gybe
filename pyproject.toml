[build-system]
requires = ["flit_core >=2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.metadata]
module = "gybe"
author = "Peter Morrow"
author-email = "petermorrowtech@gmail.com"
home-page = "https://github.com/petermorrow/gybe"
classifiers = ["License :: OSI Approved :: MIT License"]
description-file = "README.md"
requires = [
    "click >=7.0.0",
    "pydantic >=2.0.0,<3.0.0",
    "PyYAML >=5.0.0",
]

[tool.flit.metadata.requires-extra]
test = [
    "pytest",
    "pytest-cov",
]

[tool.ruff]
line-length = 110
indent-width = 4
exclude = [
    ".venv",
    ".git",
    ".pytest_cache",
    ".mypy_cache",
]

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = ["E", "F", "W", "S", "N", "I", "D", "ARG"]
ignore = ["D203", "D205", "D213", "D400", "D415", "N815"]

[tool.ruff.format]
quote-style = "single"
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]
