[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gybe"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Peter Morrow", email = "petermorrowtech@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "click >=7.0.0",
  "PyYAML >=5.0.0",
  "attrs",
  "cattrs",
]

[project.urls]
Documentation = "https://github.com/petermorrowdev/gybe#readme"
Issues = "https://github.com/petermorrowdev/gybe/issues"
Source = "https://github.com/petermorrowdev/gybe"

[tool.hatch.version]
path = "gybe/__init__.py"

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "pytest-cov",
  "coverage[toml]>=6.5",
  "mypy",
  "ruff",
]
[tool.hatch.envs.default.scripts]
test = "pytest"
genk8s = "bash codegen/kubernetes"

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]


[tool.coverage.run]
source_pkgs = ["gybe", "tests"]
branch = true
parallel = true

[tool.coverage.paths]
gybe = ["src/gybe", "*/gybe/src/gybe"]
tests = ["tests", "*/gybe/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
addopts = "--ignore kubernetes -v --cov gybe tests --cov-report=term-missing --durations=3"
testpaths = "tests"

[tool.ruff]
line-length = 110
indent-width = 4
exclude = [
    ".venv",
    ".git",
    ".pytest_cache",
    ".mypy_cache",
]

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = ["E", "F", "W", "S", "N", "I", "D", "ARG"]
ignore = ["D203", "D205", "D213", "D400", "D415", "N815"]

[tool.ruff.format]
quote-style = "single"
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]
